<functionstmt type='fn' id='aggregate'>
    <parameters>
        <vexp op='id' type='&[i32]'>list</vexp>
    </parameters>
    <blockstmt type='block'>
        <letstmt type='let' id='len'>
            <vexp op='methodcall'>
                <vexp op='id'>list</vexp>
                <method>len</method>
            </vexp>
        </letstmt>

        <letstmt type='let' id='ret' Mut>
            <vexp op='vecinit'>
                <vexp op='id'>ret</vexp> [<vexp op='num'>0</vexp>; <vexp op='id'>len</vexp>] </vexp>
        </letstmt>

        <forstmt type='for' id='i'>
            <range>
                <vexp op='num'>0</vexp>..<vexp op='id'>len</vexp>
            </range>
            <blockstmt type='block'>
                <ifstmt type='if'>
                    <vexp op='%'>
                        <vexp op='id'>i</vexp>
                        <vexp op='num'>2</vexp>
                    </vexp>
                    <blockstmt type='block'>
                        <letstmt type='let' id='temp'>
                            <vexp op='+='>
                                <vexp op='index'>
                                    <vexp op='id'>ret</vexp>
                                    <index>
                                        <vexp op='/'>
                                            <vexp op='id'>i</vexp>
                                            <vexp op='num'>2</vexp>
                                        </vexp>
                                    </index>
                                </vexp>
                                <vexp op='index'>
                                    <vexp op='id'>list</vexp>
                                    <index>
                                        <vexp op='id'>i</vexp>
                                    </index>
                                </vexp>
                            </vexp>
                        </letstmt>
                    </blockstmt>
                    <blockstmt type='block'>
                        <letstmt type='let' id='temp'>
                            <vexp op='='>
                                <vexp op='index'>
                                    <vexp op='id'>ret</vexp>
                                    <index>
                                        <vexp op='/'>
                                            <vexp op='id'>i</vexp>
                                            <vexp op='num'>2</vexp>
                                        </vexp>
                                    </index>
                                </vexp>
                                <vexp op='index'>
                                    <vexp op='id'>list</vexp>
                                    <index>
                                        <vexp op='id'>i</vexp>
                                    </index>
                                </vexp>
                            </vexp>
                        </letstmt>
                    </blockstmt>
                </ifstmt>
            </blockstmt>
        </forstmt>
        <returnstmt type='return'>
            <vexp op='id'>ret</vexp>
        </returnstmt>
    </blockstmt>
</functionstmt>

<functionstmt type='fn' id='printall'>
    <parameters>
        <vexp op='id' type='&[i32]'>list</vexp>
    </parameters>
    <blockstmt type='block'>
        <printstmt type='print'>
            <vexp op='string'>"["</vexp>
        </printstmt>
        <forstmt type='for' id='i'>
            <range>
                <vexp op='num'>0</vexp>..<vexp op='methodcall'>
                    <vexp op='id'>list</vexp>
                    <method>len</method>
                </vexp>
            </range>
            <blockstmt type='block'>
                <printstmt type='print'>
                    <vexp op='string'>"{}, "</vexp>
                    <vexp op='index'>
                        <vexp op='id'>list</vexp>
                        <index>
                            <vexp op='id'>i</vexp>
                        </index>
                    </vexp>
                </printstmt>
            </blockstmt>
        </forstmt>
        <printstmt type='print'>
            <vexp op='string'>"]"</vexp>
        </printstmt>
    </blockstmt>
</functionstmt>

<functionstmt type='fn' id='main'>
    <parameters></parameters>
    <blockstmt type='block'>
        <letstmt type='let' id='test1'>
            <vexp op='string'>"test1 [1, 2, 3, 4, 5, 6]"</vexp>
        </letstmt>

        <letstmt type='let' id='ret1'>
            <vexp op='call'> aggregate ( <vexp op='id'>test1</vexp> ) </vexp>
        </letstmt>


        <vexp op='call'>printall(<vexp op='id'>test1</vexp> )</vexp>
        <vexp op='call'>printall(<vexp op='id'>ret1</vexp> )</vexp>
        <letstmt type='let' id='test2'>
            <vexp op='string'>"test2 [1, 2, 3, 4, 5]"</vexp>
        </letstmt>
        <letstmt type='let' id='ret2'>
            <vexp op='call'>aggregate( <vexp op='id'>test2</vexp>)</vexp>
        </letstmt>


        <vexp op='call'>printall(<vexp op='id'>test2</vexp> )</vexp>


        <vexp op='call'>printall(<vexp op='id'>ret2</vexp> )</vexp>
    </blockstmt>
</functionstmt>