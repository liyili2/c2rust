# Generated from Rust.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,36,186,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,
        1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
        1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,
        1,15,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,19,1,19,
        1,19,1,19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
        1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,
        1,29,1,29,1,30,1,30,1,30,1,31,1,31,1,32,1,32,5,32,159,8,32,10,32,
        12,32,162,9,32,1,33,4,33,165,8,33,11,33,12,33,166,1,34,4,34,170,
        8,34,11,34,12,34,171,1,34,1,34,1,35,1,35,1,35,1,35,5,35,180,8,35,
        10,35,12,35,183,9,35,1,35,1,35,0,0,36,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,
        59,30,61,31,63,32,65,33,67,34,69,35,71,36,1,0,5,3,0,65,90,95,95,
        97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,
        32,2,0,10,10,13,13,189,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,
        0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,
        0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,
        0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,
        0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,
        0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,
        0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,
        0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,1,73,1,0,0,0,3,76,1,0,0,0,5,78,1,
        0,0,0,7,80,1,0,0,0,9,83,1,0,0,0,11,85,1,0,0,0,13,87,1,0,0,0,15,89,
        1,0,0,0,17,91,1,0,0,0,19,93,1,0,0,0,21,95,1,0,0,0,23,99,1,0,0,0,
        25,103,1,0,0,0,27,105,1,0,0,0,29,107,1,0,0,0,31,109,1,0,0,0,33,111,
        1,0,0,0,35,115,1,0,0,0,37,119,1,0,0,0,39,121,1,0,0,0,41,125,1,0,
        0,0,43,128,1,0,0,0,45,131,1,0,0,0,47,136,1,0,0,0,49,138,1,0,0,0,
        51,140,1,0,0,0,53,142,1,0,0,0,55,144,1,0,0,0,57,146,1,0,0,0,59,148,
        1,0,0,0,61,151,1,0,0,0,63,154,1,0,0,0,65,156,1,0,0,0,67,164,1,0,
        0,0,69,169,1,0,0,0,71,175,1,0,0,0,73,74,5,102,0,0,74,75,5,110,0,
        0,75,2,1,0,0,0,76,77,5,40,0,0,77,4,1,0,0,0,78,79,5,41,0,0,79,6,1,
        0,0,0,80,81,5,45,0,0,81,82,5,62,0,0,82,8,1,0,0,0,83,84,5,44,0,0,
        84,10,1,0,0,0,85,86,5,58,0,0,86,12,1,0,0,0,87,88,5,38,0,0,88,14,
        1,0,0,0,89,90,5,91,0,0,90,16,1,0,0,0,91,92,5,59,0,0,92,18,1,0,0,
        0,93,94,5,93,0,0,94,20,1,0,0,0,95,96,5,105,0,0,96,97,5,51,0,0,97,
        98,5,50,0,0,98,22,1,0,0,0,99,100,5,86,0,0,100,101,5,101,0,0,101,
        102,5,99,0,0,102,24,1,0,0,0,103,104,5,60,0,0,104,26,1,0,0,0,105,
        106,5,62,0,0,106,28,1,0,0,0,107,108,5,123,0,0,108,30,1,0,0,0,109,
        110,5,125,0,0,110,32,1,0,0,0,111,112,5,108,0,0,112,113,5,101,0,0,
        113,114,5,116,0,0,114,34,1,0,0,0,115,116,5,109,0,0,116,117,5,117,
        0,0,117,118,5,116,0,0,118,36,1,0,0,0,119,120,5,61,0,0,120,38,1,0,
        0,0,121,122,5,102,0,0,122,123,5,111,0,0,123,124,5,114,0,0,124,40,
        1,0,0,0,125,126,5,105,0,0,126,127,5,110,0,0,127,42,1,0,0,0,128,129,
        5,105,0,0,129,130,5,102,0,0,130,44,1,0,0,0,131,132,5,101,0,0,132,
        133,5,108,0,0,133,134,5,115,0,0,134,135,5,101,0,0,135,46,1,0,0,0,
        136,137,5,46,0,0,137,48,1,0,0,0,138,139,5,42,0,0,139,50,1,0,0,0,
        140,141,5,47,0,0,141,52,1,0,0,0,142,143,5,37,0,0,143,54,1,0,0,0,
        144,145,5,43,0,0,145,56,1,0,0,0,146,147,5,45,0,0,147,58,1,0,0,0,
        148,149,5,62,0,0,149,150,5,62,0,0,150,60,1,0,0,0,151,152,5,61,0,
        0,152,153,5,61,0,0,153,62,1,0,0,0,154,155,5,34,0,0,155,64,1,0,0,
        0,156,160,7,0,0,0,157,159,7,1,0,0,158,157,1,0,0,0,159,162,1,0,0,
        0,160,158,1,0,0,0,160,161,1,0,0,0,161,66,1,0,0,0,162,160,1,0,0,0,
        163,165,7,2,0,0,164,163,1,0,0,0,165,166,1,0,0,0,166,164,1,0,0,0,
        166,167,1,0,0,0,167,68,1,0,0,0,168,170,7,3,0,0,169,168,1,0,0,0,170,
        171,1,0,0,0,171,169,1,0,0,0,171,172,1,0,0,0,172,173,1,0,0,0,173,
        174,6,34,0,0,174,70,1,0,0,0,175,176,5,47,0,0,176,177,5,47,0,0,177,
        181,1,0,0,0,178,180,8,4,0,0,179,178,1,0,0,0,180,183,1,0,0,0,181,
        179,1,0,0,0,181,182,1,0,0,0,182,184,1,0,0,0,183,181,1,0,0,0,184,
        185,6,35,0,0,185,72,1,0,0,0,5,0,160,166,171,181,1,6,0,0
    ]

class RustSubsetLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    Identifier = 33
    Number = 34
    WS = 35
    COMMENT = 36

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'fn'", "'('", "')'", "'->'", "','", "':'", "'&'", "'['", "';'", 
            "']'", "'i32'", "'Vec'", "'<'", "'>'", "'{'", "'}'", "'let'", 
            "'mut'", "'='", "'for'", "'in'", "'if'", "'else'", "'.'", "'*'", 
            "'/'", "'%'", "'+'", "'-'", "'>>'", "'=='", "'\"'" ]

    symbolicNames = [ "<INVALID>",
            "Identifier", "Number", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "Identifier", "Number", "WS", "COMMENT" ]

    grammarFileName = "Rust.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


